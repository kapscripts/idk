-- Services
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local workspace = game:GetService("Workspace")

-- Config
local WEBHOOK_URL = "https://discord.com/api/webhooks/1417006443214934046/gxsfCxKms4LKy5BwK8dIkg8oYdkN6xe-NM86ScNoBq9zXrqgfrLMkWQuQRtdcNkPsEke"
local PLACE_ID = 109983668079237 -- set your PlaceId
local JOB_ID = "a64f6f83-a056-4c05-b662-c292b9fd4050" -- set your GameInstanceId
local REJOIN_WAIT = 0.1

-- Helper: get request function
local function get_request()
    if request then return request end
    if syn and syn.request then return syn.request end
    if http and http.request then return http.request end
    return nil
end
local r = get_request()
if not r then return warn("No HTTP request function found!") end

-- Helper: send Discord webhook
local function send_embed(brainrot, price)
    local placeId = tostring(game.PlaceId)
    local jobId = tostring(game.JobId)
    local joinLink = string.format("https://kapscripts.github.io/BotHub/?placeId=%s&gameInstanceId=%s", placeId, jobId)
    local joinScript = string.format('game:GetService("TeleportService"):TeleportToPlaceInstance(%s,"%s",game.Players.LocalPlayer)', placeId, jobId)

    local payload = HttpService:JSONEncode({
        embeds = {{
            title = "🧠 Brainrot Notify | FUCK CHILI HUB",
            color = 0x00FFFF, -- Cyan
            fields = {
                { name = "🔤 Name", value = brainrot, inline = true },
                { name = "💰 Money per sec", value = "$"..tostring(price).."/s", inline = true },
                { name = "👥 Players", value = tostring(#Players:GetPlayers()).."/8", inline = true },
                { name = "🆔 Job ID (Mobile)", value = jobId, inline = false },
                { name = "🆔 Job ID (PC)", value = "\n"..jobId.."\n", inline = false },
                { name = "🔗 Join Link", value = "[Click to Join]("..joinLink..")", inline = false },
                { name = "📜 Join Script (PC)", value = "\nlua\n"..joinScript.."\n", inline = false },
            },
            footer = { text = "Made by Chilli Hub | "..os.date("Today at %I:%M %p") }
        }}
    })

    local success, err = pcall(function()
        r({ Url = WEBHOOK_URL, Method = "POST", Headers = { ["Content-Type"] = "application/json" }, Body = payload })
    end)

    if success then
        print("✅ Webhook sent successfully.")
    else
        warn("❌ Failed to send webhook:", err)
    end
end

-- Helper: parse formatted number like "1.2M/s"
local function parseFormattedNumber(str)
    str = str:gsub("%$", ""):gsub("/s", ""):gsub("%s+", "")
    local num, suffix = str:match("([%d%.]+)([KMBT]?)")
    num = tonumber(num)
    if not num then return nil end
    local multipliers = { K = 1e3, M = 1e6, B = 1e9, T = 1e12 }
    return num * (multipliers[suffix] or 1)
end

-- Get the local player's plot
local function getLocalPlot(plr)
    local plots = workspace:WaitForChild("Plots")
    for _,v in pairs(plots:GetDescendants()) do
        if v.Name == "TextLabel" and v.Text:find(plr.Name) then
            return v.Parent.Parent.Parent.Parent
        end
    end
end
local localPlot = getLocalPlot(Players.LocalPlayer)

-- Find the highest price Brainrot in all plots
local function getHighestPrice()
    local plots = workspace:WaitForChild("Plots")
    local highestPrice = 0
    local highestBrainrot = nil
    for _,v in pairs(plots:GetDescendants()) do
        if v.Name == "Generation" and not v:IsDescendantOf(localPlot) then
            local num = parseFormattedNumber(v.Text)
            local name = v.Parent:FindFirstChild("DisplayName") and v.Parent.DisplayName.Text or "Unknown"
            if num and num > highestPrice then
                highestPrice = num
                highestBrainrot = name
            end
        end
    end
    if highestPrice > 1e6 and highestBrainrot then
        send_embed(highestBrainrot, highestPrice)
    end
    return highestPrice, highestBrainrot
end

-- RUN webhook first
getHighestPrice()

-- Queue rejoiner safely
local rejoinCode = [[
    local Players = game:GetService("Players")
    local TeleportService = game:GetService("TeleportService")
    local PLACE_ID = 109983668079237
    local JOB_ID = "a64f6f83-a056-4c05-b662-c292b9fd4050"
    local WAIT = 0.1
    while true do
        pcall(function()
            TeleportService:TeleportToPlaceInstance(PLACE_ID, JOB_ID, Players.LocalPlayer)
        end)
        wait(WAIT)
    end
]]
if syn and syn.queue_on_teleport then
    syn.queue_on_teleport(rejoinCode)
elseif queue_on_teleport then
    queue_on_teleport(rejoinCode)
end
